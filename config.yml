token:          # Lichess OAuth2 Token.

engines:
  standard:                               # Engine used for standard chess and when no suitable special engine is configured.
    dir: "./engines"                      # Directory containing the engine.
    name: "stockfish"          # Binary name of the engine to use (updated for Windows).
    ponder: true                          # Think on opponent's time.
    silence_stderr: false                 # Suppresses stderr output.
    move_overhead_multiplier: 21.0         # Increase if your bot flags games too often. Default move overhead is 1 second per 1 minute initital time.
    uci_options:                          # Arbitrary UCI options passed to the engine. (Commenting allowed)
      Threads: 6                          # Max CPU threads the engine can use.
      Hash: 1024                           # Max memory (in megabytes) the engine can allocate.
      Move Overhead: 100                  # Increase if your bot flags games too often.

  variants:                               # Engine used for standard chess and when no suitable special engine is configured.
    dir: "./engines"                      # Directory containing the engine.
    name: "fsf"          # Binary name of the engine to use (update for Windows).
    ponder: true                          # Think on opponent's time.
    silence_stderr: false                 # Suppresses stderr output.
    move_overhead_multiplier: 1.0         # Increase if your bot flags games too often. Default move overhead is 1 second per 1 minute initital time.
    uci_options:                          # Arbitrary UCI options passed to the engine. (Commenting allowed)
      Threads: 6                          # Max CPU threads the engine can use.
      Hash: 1024                           # Max memory (in megabytes) the engine can allocate.
      Move Overhead: 100                  # Increase if your bot flags games too often.
      Use NNUE: true
      EvalFile: "3check-cb5f517c228b.nnue:antichess-dd3cbe53cd4e.nnue:atomic-2cf13ff256cc.nnue:crazyhouse-8ebf84784ad2.nnue:horde-28173ddccabe.nnue:kingofthehill-978b86d0e6a4.nnue:racingkings-636b95f085e3.nnue"
 # Use the same pattern for 'bullet', 'blitz', 'rapid', 'classical',
# 'antichess', 'atomic', 'chess960', 'crazyhouse', 'horde', 'kingofthehill', 'racingkings' and '3check' as well.
# Append '_white' or '_black' to use the engine only as the specific color.

syzygy:
  standard:
    enabled: false                         # Activate local syzygy endgame tablebases.
    paths:                                # Paths to local syzygy endgame tablebases.
      - "./engines/syzygy"
    max_pieces: 7                         # Count of max pieces in the local syzygy endgame tablebases.
    instant_play: true                    # Whether the bot should play directly from syzygy without engine if possible.
  antichess:
    enabled: false                        # Activate local syzygy endgame tablebases.
    paths:                                # Paths to local syzygy endgame tablebases.
      - "/path/to/antichess/syzygy"
    max_pieces: 6                         # Count of max pieces in the local syzygy endgame tablebases.
    instant_play: true                    # Whether the bot should play directly from syzygy without engine if possible.
  atomic:
    enabled: false                        # Activate local syzygy endgame tablebases.
    paths:                                # Paths to local syzygy endgame tablebases.
      - "/path/to/atomic/syzygy"
    max_pieces: 6                         # Count of max pieces in the local syzygy endgame tablebases.
    instant_play: true                    # Whether the bot should play directly from syzygy without engine if possible.

gaviota:
  enabled: false                          # Activate local gaviota endgame tablebases.
  paths:                                  # Paths to local gaviota endgame tablebases.
    - "/path/to/gaviota"
  max_pieces: 5                           # Count of max pieces in the local gaviota endgame tablebases.

opening_books:
  enabled: true                          # Activate opening books.
  priority: 400                           # Priority with which this move source is used. Higher priority is used first.
  books:
#   bullet:
#     selection: weighted_random          # Move selection is one of "weighted_random", "uniform_random" or "best_move".
#     names:                              # List of names of books to use in bullet.
#       - BulletBook
#       - DefaultBook
#   standard_black:
#     selection: best_move                # Move selection is one of "weighted_random", "uniform_random" or "best_move".
#     names:                              # List of names of books to use as black.
#       - BlackBook
    standard:
      selection: best_move          # Move selection is one of "weighted_random", "uniform_random" or "best_move".
#     max_depth: 16                       # Half move max depth. (Comment this line for max depth)
      names:                              # List of names of books to use if there is no specific book for the time control, white, black or chess960.
        - white
        - DefaultBook
#   Use the same pattern for 'bullet', 'blitz', 'rapid', 'classical',
#   'antichess', 'atomic', 'chess960', 'crazyhouse', 'horde', 'kingofthehill', 'racingkings' and '3check' as well.
#   Append '_white' or '_black' to use the books only as the specific color.

online_moves:
  opening_explorer:
    enabled: false                         # Activate online moves from Lichess opening explorer. The move that has performed best for this bot is played.
    priority: 300                         # Priority with which this move source is used. Higher priority is used first.
    only_without_book: false              # Whether the Lichess opening explorer should only be used if there is no matching book.
    use_for_variants: false                # Whether the Lichess opening explorer should be used for other variants than standard and chess960.
    min_time: 20                          # Time the bot must have at least to use the online move. +10 seconds in games without increment.
    timeout: 5                            # Time the server has to respond.
    min_games: 10                          # Minimum number of games in which the position must have occurred.
    only_with_wins: true                  # Whether to play only moves that have won before.
    selection: "performance"              # Move selection is "performance" or "win_rate".
    anti: true                            # Whether to play the moves in which the opponent performs the worst.
    max_depth: 20                         # Half move max depth. (Comment this line for max depth)
#   max_moves: 1                          # Max number of moves played from Lichess opening explorer. (Comment this line for max moves)
  lichess_cloud:
    enabled: false                         # Activate online moves from Lichess opening explorer. The move that has performed best for this bot is played.
    use_for_variants: true               # Whether the cloud should be used for other variants than standard and chess960.
    priority: 200                         # Priority with which this move source is used. Higher priority is used first.
    only_without_book: false              # Whether the cloud should only be used if there is no matching book.
    min_eval_depth: 20                    # Minimum evaluation depth.
    min_time: 10                          # Time the bot must have at least to use the online move. +10 seconds in games without increment.
    timeout: 5                            # Time the server has to respond.
    max_depth: 30                         # Half move max depth. (Comment this line for max depth)
#   max_moves: 1                          # Max number of moves played from Lichess cloud eval. (Comment this line for max moves)
  chessdb:
    enabled: false                         # Activate online moves from https://chessdb.cn/queryc_en/
    priority: 100                         # Priority with which this move source is used. Higher priority is used first.
    only_without_book: false              # Whether the chessdb should only be used if there is no matching book.
    min_candidates: 5                     # Minimum number of candidate moves.
    min_time: 20                          # Time the bot must have at least to use the online move. +10 seconds in games without increment.
    timeout: 5                            # Time the server has to respond.
    selection: "best"                     # Move selection is one of "optimal", "best" or "good".
    max_depth: 30                         # Half move max depth. (Comment this line for max depth)
#   max_moves: 1                          # Max number of moves played from chessdb. (Comment this line for max moves)
  online_egtb:
    enabled: true                         # Activate online endgame tablebases from Lichess.
    min_time: 20                           # Time the bot must have at least to use the online move. +10 seconds in games without increment.
    timeout: 3                            # Time the server has to respond.

offer_draw:
  enabled: true                           # Activate whether the bot should offer draw.
  score: 10                               # If the absolute value of the score is less than or equal to this value, the bot offers/accepts draw (in cp)
  consecutive_moves: 10                   # How many moves in a row the absolute value of the score has to be below the draw value
  min_game_length: 35                     # Earliest move in which draw is offered.
  against_humans: true                    # Activate whether these settings should apply against humans.

resign:
  enabled: true                          # Activate whether the bot should resign games.
  score: -1000                            # If the score is less than or equal to this value, the bot resigns (in cp).
  consecutive_moves: 5                    # How many moves in a row the score has to be below the resign value.
  against_humans: false                    # Activate whether these settings should apply against humans.

challenge:                                # Incoming challenges. (Commenting allowed)
  concurrency: 2                          # Number of games to play simultaneously.
  bullet_with_increment_only: false       # Whether bullet games against BOTs should only be accepted with increment.
# min_increment: 0                        # Minimum amount of increment to accept a challenge.
# max_increment: 180                      # Maximum amount of increment to accept a challenge.
# min_initial: 0                          # Minimum amount of initial time to accept a challenge.
# max_initial: 315360000                  # Maximum amount of initial time to accept a challenge.
  variants:                               # Chess variants to accept (https://lichess.org/variant).
    - standard
    - chess960
    - fromPosition
    - antichess
    - atomic
    - crazyhouse
    - horde
    - kingOfTheHill
    - racingKings
    - threeCheck
  time_controls:                          # Speeds or time controls in initial_minutes+increment_seconds format to accept.
    - bullet
    - blitz
    - rapid
    
  bot_modes:                              # Game modes to accept against BOTs.
    - casual                              # Unrated games.
    - rated                               # Rated games
  human_modes:                            # Game modes to accept against humans.
    - casual                              # Unrated games.
    - rated                               # Rated games

matchmaking:
  delay: 180                              # Time in seconds the bot must be idle before a new challenge is started.
  timeout: 30                             # Time until a challenge is canceled.
  selection: cyclic                       # Matchmkaing type selection is one of "weighted_random", "sequential" or "cyclic".
  types:                                  # Matchmaking types of which one is selected before each game.
    bullet:                               # Arbitrary name of the matchmaking type. Names must be unique.
      tc: 0.5+0
      min_rating_diff: 600
      max_rating_diff: 700
   
             # Maximum rating distance to opponent. Default: 10000
 #   casual_chess960:
#      tc: 0.5+1
#     rated: false
#     variant: chess960
#   optional_settings:
#     rated: true                         # Whether matchmaking should play rated games. Default: true
#     variant: standard                   # Chess variant (https://lichess.org/variant) to challenge. Default: standard
#     weight: 100                         # Weight with which this type is selected. Default: Types are played according to their time control.
#     multiplier: 15                      # Multiplier for calculating timeouts in matchmaking. Default: 15 * number of configured performance types.
#     min_rating_diff: 0                  # Minimum rating distance to opponent. Default: 0
#     max_rating_diff: 300                # Maximum rating distance to opponent. Default: 10000

messages:
  # Optional substitution keywords (include curly braces):
  #   {opponent} to insert the opponent's name
  #   {me} to insert our name
  #   {engine} to insert engine name
  #   {cpu} to insert CPU information
  #   {ram} to insert RAM size
  # Any other words in curly braces will be removed.
  #greeting: "Get ready, because I'm gonna DESTR0Y you! Good Luck - you're gonna need it!"                                                              # Message sent to the opponent at the beginning o[...]
  #goodbye: "Welp, GG's buddy! See ya' later."                                             # Message sent to the opponent after the end of a game.
  #greeting_spectators: "Here weee goo! Type !help for a list of commands I can respond to."                            # Message sent to the spectators at the beginning of a game.
  #goodbye_spectators: "Whew, that was tough. Catch ya' guys later - I've got some W0RK to do!"                                           # Message sent to the spectators after the end of a game.
# whitelist:                              # List of users whose challenges are always accepted.
#   - Username1
#   - Username2

#  blacklist:                              # List of users who are not challenged and whose challenges are declined.
#    - AndroMonsterFish
#   - Username2

books:
  DefaultBook: "./engines/Book2.bin"
  white: "./engines/white.bin"
